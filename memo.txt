　'Kosugi', 'Noto Serif JP' 共にルビ文字の大きさは元の文字の大きさのちょうど半分。

　ルビの問題が不確定要素といっても、一行の最大文字数を下回ることはあっても超えることはない。
　だから行あたりの文字数から最低どこくらいのスケールをとるのかは計算可能。

　すべての行を最大文字数毎に分割していたら処理が膨大になってしまうので、
　ページをオーバーした行だけ検出して分割し、次のページに送る方式が良いと思う。


$#########$#########$#########$#########$#########
220216

テスト結果。

サンプル小説に一行ずつ行を追加していくと、最後の手前の行が複数だった時に
separateFinalLine() で分割された最終行が追加されてしまう。

その後さらにもう一行追加すると、その複数行だった行が
途中で分割されて一行となり、最後に挿入される。

この時、ページの最大行数に関係なく1行だけ追加されてしまうため、
必要な行数分追加するように改良する必要あり。


class Page3Js の createPage() で行がはみ出すのは3つのパターンがある。

1: はみ出し行を追加する前に複数行分の空白があり、はみ出し行がそれを上回る複数行
　　5行まで収まるページだとして、1行追加、その後に5行追加、みたいなパターン。

2: はみ出し前の行がギリギリでページに収まる（1行でも追加したらアウト）
　　5行のページとして、5行分の文章追加、その後に行追加、というパターン。

3: 残り1行の状態で2行分以上の文章が追加される
　　5行のページとして、4行分の文章追加、 その後に複数行分の追加。


最終行がルビを含むかどうかも判定に影響を与える。
ルビありだと1行に収まらないのに、ルビなしだと入っちゃうようなケース。

最終行がルビかどうかを判別するには、
まず行全体に<ruby>が含まれるか判定、
含まれる場合、それの indexOf が maxChars 以内にあるか判定。
これでほとんどの場合ふるいにかけられるが、厄介なのはルビが行を跨ぐ場合。

ルビの indexOf が maxChars 以内にある場合、
ルビ漢字とフリガナの文字数を両方検出して、
長い方が行の外にはみ出すかどうかを検出する。
フリガナの方は漢字の2倍が長さとなる。
ルビが行に収まるならルビ行、そうでないならルビなし行。


$#########$#########$#########$#########$#########
220218

Page3Js クラスを作って、そこからに行を突っ込んで
余った行を次の Page3Js クラスにって方法だと、
非同期処理の問題で余りの行が生成される前に
次の Page3Js クラスが生成され、エラーになる。

Page クラスのメソッドを排除し、ただの構造体にし、
main に createPage() を移植して Promise 化、
async / await で制御することで解決。

220216 の、行はみ出しの3つのパターンのうち、2と3は解決した。

separateFinalLine() と getIndexOfLineBreak() に
残りの行数を引数として追加した結果、1の問題も解決した……
……かのように思えたが、禁則処理によって増えた文字数でバグが発生していた。

原因判明。
ルビを含まない line は単純に最大文字数で改行していたが、それが仇となった。
禁則処理に対応した関数が必要。
最後の文字と、その次の文字を検出して処理を加える。



$#########$#########$#########$#########$#########
220306

テスト用の当プロジェクトを急遽リリース向けに改良することにした。
縦書きにしてみたものの、ページ分割がうまく行かない様子。
encodeJsx が未定義と出る。

padding-top （縦書きの場合は right）をフォントサイズの 0.6 倍にして
line-height を 100％ にしてルビなしとルビありの行サイズをあわせる方法は
2行以上の P タグによって台無しになる。

localStorage に入れる必要ある情報は、
小説ID、エピソードID、ページID。

小説IDやエピソードIDはURLパラメータにしてもいいかもしれない。



$#########$#########$#########$#########$#########
220307

小説全体を一気に読み込んで、オブジェクトデータを localStorage に
保存してしまうというのはどうか。



$#########$#########$#########$#########$#########
220308

本の目次を比較するのは、サーバーが落ちるようになってきてから考えればいいんじゃないだろうか。
あるいは、目次を比較して新着があれば更新し、そうでなければ1日ごとに更新するか。

あるいは、PHP を使ってファイルの更新日時を取得して比較させるという手もある。
この JS スライドページリーダーに関しては、シンプルに毎回読み込ませるようにしよう。
とりあえずはデモとして使えるようにしたいので。

URLパラメータは？　本のIDだけが必要か？
全エピソードを読み込む仕様にしたから、ページないしはエピソードIDもいるか？

ページ数や行ナンバーだと、文字の大きさや画面サイズが変わった時に読み込む場所が変化してしまう。
かといって前に読んだ箇所に飛べないのも不便なので、
「何番目のエピソードの、何行目」という情報を保存しておくといいかも。
文字サイズ変更でページを作り変える以上、完全に正確な位置を保存するのは難しいが、
だいたいの位置なら可能。



$#########$#########$#########$#########$#########
220309

文字の大きさ、色、フォント。

ページ最後の1行（もしくは最初の行？）が消滅するバグ発生。
発生条件をチェックすると、
「最後の行の分割（separateFinalLine）が発生していない場合」
のみと推測、コードをいじったところ解決。

今度はどういうわけか1行はみ出すバグが発生。

章題もサブタイトルも1ページはさすがに冗長な気がする。
章題は1ページ、サブタイトルはページに組み込んではどうか。



$#########$#########$#########$#########$#########
220310

すべてのページを読み込んだ後に画面をタップしてページを最初まで飛ばしたところ、
最初の方でページがまったく分割されていない箇所がたくさんあった。
更新ボタンで再度読み込ませたら直った。原因不明。

URLパラメータから小説の切り替えに成功。
あとは各エピソードのパラメータから特定のページに飛べればひとまず完成。

select でのエピソード間のページ移動がうまくいかなくて苦労した。
localStorage はどうやら配列は記録できないらしく、
"," 区切りの string で配列を保存するらしい。



$#########$#########$#########$#########$#########
220311

main.js の init() 編集中。



$#########$#########$#########$#########$#########
220313

本が増えてきた際にフォルダ分けできないのは少々面倒だな。
「第三世界収容所|prison/prison.txt|1」のように、
ディレクトリとファイル名を記入する方式にするか。

DOMをいじって実測で改ページポイントを探る方法は
スマホなどのロースペ環境においてはロード時間が長くなりすぎるため、
プロジェクトを slidePageReader2 とし、
react版で使っていた数値計算だけで改ページポイントを探る方式に切り替える。

数値計算方式に変更してみたものの、
やはりスマホでロードに時間がかかるのは相変わらず。
エピソードごとに分割するくらいしか解決策はなさそう。

白金記をふたたびスマホ（Zenfone）で読み込ませたところ、10秒くらいで表示された。
数値計算方式なら何とか実現は可能っぽい。

iPhoneでまた読み込ませてみたところ、こちらはずっと表示されない。
わざわざ slide_page_reader2 というフォルダを新規作成したので
キャッシュのせいではない。

単純に読み込み自体が重すぎるか、セキュリティウェアの暴走。
WindowsでもデベロッパーモードのChromeでないと
「Unchecked runtime.lastError: The message port closed before a response was received.」
などというエラーメッセージが出る。

エラーメッセージでググってみたところ、カスペルスキーの仕業とか。
こちらのセキュリティソフトは現時点ではノートンだけど。

仕方ない。エピソード毎に分割しよう。
スマホでも利用可能にするにはそれしかない。
少ないページ数ならDOM実測方式でも問題なく読めるはず。

スマホページで黒を討つ者を読み込んだ時に、
特定のページが表示されなくなるバグを発見。

特定の1行が消えるバグが出現。
createPages() の finalLines あたりが怪しい。
separateFinalLine() の挙動がおかしい。
なぜか空の文字列が入っていたりする。全部半角スペースに置換えてるはずなのに。